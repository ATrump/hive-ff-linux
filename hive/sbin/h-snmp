#!/usr/bin/env bash
# Executes gpu-stats and stores it to file
# Runs inside screen with agent

TEMP_OUTPUT="/tmp/h-snmp.list"
OUTPUT="/run/hive/h-snmp.list"
INTERVAL=10 #seconds
MAX_IP_LIST_AGE=60 #seconds

if [[ ! "$1" == "run" ]]; then
	while true; do
		$0 run
		sleep 1
		echo "Restarting..."
	done
fi

echo "Starting h-smtp"

#get default interface
default_if=$(ip route list | awk '/^default/ {print $5}')
echo "Default network interface=$default_if"
#get default network
default_net=`ip -o -f inet addr show $default_if | awk '{print $4}'`
echo "Default network=$default_net"
#get default ip-address
default_ip=`echo $default_net | cut -d '/' -f 1`
echo "Default ip-address=$default_ip"
#get rigs ip-addresses
rigs_ip_list=`nmap -sP $default_net | grep -B 2 "is up" | grep "Nmap" | grep -v "Starting" | grep -v "gateway" | grep -v \`hostname -I\` | awk '{print $5}'`
rig_ip_list_time=`date +%s`
echo "Rigs IP-addresses="$rigs_ip_list

while true; do
	date

	time_start=`date +%s`

  #get rigs ip-addresses
  current_time=`date +%s`
  rig_ip_list_age=$(( $current_time - $rig_ip_list_time ))
  if [[ $rig_ip_list_age -ge $MAX_IP_LIST_AGE ]]; then
    #update rigs ip-addresses
    echo "Updating rigs IP-addresses"
    rigs_ip_list=`nmap -sP $default_net | grep -B 2 "is up" | grep "Nmap" | grep -v "Starting" | grep -v "gateway" | grep -v \`hostname -I\` | awk '{print $5}'`
    echo "Rigs IP-addresses="$rigs_ip_list
  fi

  #clear temporary output
  [[ -f $TEMP_OUTPUT ]] && rm $TEMP_OUTPUT
  #fill temporary output
  for t_ip in $rigs_ip_list; do
    echo "Sending request to $t_ip"
    t_response=`snmpwalk -r 1 -v 2c -c public $t_ip .1.3.6.1.4.1.2021.8 | grep ".4.1.2.2.100.102.1 = STRING: " | awk '{print $4}' | tr -d '"'`
    [[ ! -z $t_response ]] && echo "t=${t_response}Â°C"
    if [[ ! -z $t_response ]]; then
      echo "$t_ip $t_response" >> $TEMP_OUTPUT
    fi
  done
cat $TEMP_OUTPUT
  #copy temporary output to output
  [[ -s $TEMP_OUTPUT ]] && cp $TEMP_OUTPUT $OUTPUT

	time_finish=`date +%s`
	wasted=$(( $time_finish - $time_start ))

	echo "$wasted seconds snmp reading"
	echo ""

	tosleep=$(( $INTERVAL - $wasted ))

	#echo "Sleeping $tosleep"
	if [[ $tosleep -ge 0 ]]; then
		#sleep $INTERVAL
		read -t $tosleep
	fi
done
