#!/usr/bin/env bash
#Checks if config exists, ask for rig if no config found

[ -t 1 ] && . colors

if [[ -e /hive-config/branding-logo.txt ]]; then
	BRANDING_LOGO=$(cat /hive-config/branding-logo.txt; echo .) #echo . to preserve new lines
	BRANDING_LOGO=${BRANDING_LOGO%.} #remove last .
else
	BRANDING_LOGO="
_______ _______ ___ ___ _______
|   |   |_     _|   |   |    ___|
|       |_|   |_|   |   |    ___|
|___|___|_______|\_____/|_______|

"
fi
BRANDING_LOGO="${BYELLOW}${BRANDING_LOGO}${NOCOLOR}"


#${CYAN}Welcome to Miners Hive.${NOCOLOR}


HELLO_OK="/tmp/.hive-hello-ok"
mkdir -p "/hive-config"



[[ $1 == "-f" ]] && echo "Forcing reconfig"

HIVE_HOST_URL=$2

if [[ -z $HIVE_HOST_URL ]]; then
	#Get preconfigured api host
	[[ -e /hive-config/rig-config-example.txt ]] &&
		eval `cat /hive-config/rig-config-example.txt | dos2unix | grep '^HIVE_HOST_URL='`
	[[ -z $HIVE_HOST_URL ]] && HIVE_HOST_URL='http://api.hiveos.farm'
fi



if [[ ! -e $RIG_CONF || $1 == "-f" ]]; then
	selfupgrade
	disk-expand -s
	msg=$(cat <<EOF
${BRANDING_LOGO}
${CYAN}This is your first boot, no config found at "$RIG_CONF".
Please add your rig in your profile on the web, set the name and password for it.
Then get rig id and give it to me.

${NOCOLOR}
EOF
)
	echo -e "$msg"
elif [[ ! -e $HELLO_OK ]]; then
	msg=$(cat <<EOF
${BRANDING_LOGO}
${YELLOW}Config "$RIG_CONF" exists but during boot the connection to hive server failed.
Either the server or your network is temporary down.
If you have changed the password for this rig, then you need to enter credentials again.$NOCOLOR
Run ${CYAN}hello${NOCOLOR} to try again. Or run ${CYAN}firstrun -f${NOCOLOR} to enter new ID and password.
$NOCOLOR
EOF
)
	echo -e "$msg"

	sleep 5

	echo "Trying to say hello again...";
	hello
	
	exit 0

else
	exit 0
fi







url=
id=
passwd=



read_url () {
	while true; do
		read url
		[[ -z $url ]] && break
		[[ $url =~ ^(http|https)://[0-9a-z\.-]+(:[0-9]{2,5})?$ ]] &&
			HIVE_HOST_URL=$url &&
			echo -e "New API server URL: ${YELLOW}$HIVE_HOST_URL${NOCOLOR}" &&
			break
		echo "Invalid URL"
	done
}


read_id () {
	while true; do
		echo -n "RIG ID: "
		read id
		[[ $id =~ ^[0-9]+$ ]] && break
		echo "Invalid input"
	done
}

read_passwd () {
	while true; do
		echo -n "Password: "
		read passwd
		#any chars no spaces
		#[[ ! $passwd =~ [[:blank:]] ]] && break
		[[ ! $passwd =~ \"|\'|[[:blank:]] ]] && break #if does not match \" or \' space - break cycle
		echo "Invalid input"
	done
}


ask_yn () {
	read yn
	if [[ -z $yn ]]; then
		yn="$1"
	else
		#Unify the answer
		yn=${yn,}
		yn=${yn:0:1}
	fi
	[[ $yn == "y" ]] && return 0
	return 1
}


while true; do

	if ! networkctl list | grep -q routable; then
		echo -en "Setup WiFi? ${YELLOW}(y/N)${NOCOLOR} "
		ask_yn "n" && wifi
	fi
	
	echo -e "Server API URL: ${YELLOW}$HIVE_HOST_URL${NOCOLOR}"
	echo "Press ENTER to continue with this URL or type a new one"
	read_url
	read_id
	read_passwd

	cat > $RIG_CONF <<FILEEOF
HIVE_HOST_URL="$HIVE_HOST_URL"
RIG_ID="$id"
RIG_PASSWD="$passwd"
FILEEOF

	echo ""
	echo "Config written to \"$RIG_CONF\"."
	
	#We ask if the user wants to change the password. By default - change
	echo -e "\n${CYAN}Default password for \"user\" is \"1\".${NOCOLOR}"
	echo -e "We recommend to change default password on rigs exposed to Internet."
	echo -en "Set rig password as system? ${YELLOW}(Y/n)${NOCOLOR} "
	ask_yn "y" && hive-passwd $passwd #Change password
	
	#try to connect
	hello restartminer

	if [ $? -eq 0 ]; then
		#miner restart

		#Apply OC if configs are available
		[[ -f $AMD_OC_CONF ]] && amd-oc-safe
		[[ -f $NVIDIA_OC_CONF ]] && nvidia-oc-log

	 	echo -e "\n${BGREEN}Login OK. Happy mining!${NOCOLOR}\n"
	 	exit 0
	fi

	echo -e "${RED}Sorry, id and password did not work.${NOCOLOR}\n"
	echo -en "Try again? ${YELLOW}(Y/n)${NOCOLOR} "
	ask_yn "y" || break
done



